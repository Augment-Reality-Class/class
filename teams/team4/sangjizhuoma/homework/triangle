#include <GL/glut.h>

#define X 0.525731112119133606
#define Z 0.850650808352039932

static GLfloat vdata[12][3] = {
	{-X,0.0,Z},{X,0.0,Z},{-X,0.0,-Z},{X,0.0,-Z},
	{0.0,Z,X},{0.0,Z,-X},{0.0,-Z,X},{0.0,-Z,-X},
	{Z,X,0.0},{-Z,X,0.0},{Z,-X,0.0},{-Z,-X,0.0},
};

static GLuint tindices[20][3] = {
	{1,4,0},{4,9,0},{4,5,9},{8,5,4},{1,8,4},
	{1,10,8},{10,3,8},{8,3,5},{3,2,5},{3,7,2},
	{3,10,7},{10,6,7},{6,11,7},{6,0,11},{6,1,0},
	{10,1,6},{11,0,9},{2,11,9},{5,2,9},{11,2,7}
};

static GLfloat spin = 0.0;

void init(void)
{
	glClearColor(0.0,0.0,0.0,0.0);
	glShadeModel(GL_FLAT);  //?????????????????
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glPushMatrix();  //?????????任?????
	glRotatef(spin,0.0,1.0,0.0);
	glColor3f(0.5,0.0,1.0);
	glPolygonMode(GL_FRONT_AND_BACK,GL_LINE);
	glBegin(GL_TRIANGLES);
	int i;
	for(i=0;i<20;i++)
	{
		glVertex3fv(&vdata[tindices[i][0]][0]);
		glVertex3fv(&vdata[tindices[i][1]][0]);
		glVertex3fv(&vdata[tindices[i][2]][0]);
	}
	glEnd();
	glPopMatrix();  //???????????
	glutSwapBuffers();
}

void spinDisplay(void)
{
	spin=spin + 2.0;
	if(spin>360.0)
		spin=spin - 360.0;
	glutPostRedisplay();
}

void reshape(int w,int h)
{
	glViewport(0,0,(GLsizei)w,(GLsizei)h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(-5.0,5.0,-5.0,5.0,-5.0,5.0);
	gluLookAt(1.0,1.0,0.5,0.0,0.0,0.0,0.0,1.0,0.0);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void mouse(int button,int state,int x,int y)
{
	switch(button)
	{
	case GLUT_LEFT_BUTTON :
		if (state==GLUT_DOWN)
			glutIdleFunc(spinDisplay);  //???д???
		break;
	case GLUT_MIDDLE_BUTTON :
		if(state==GLUT_DOWN)
			glutIdleFunc(NULL);
		break;
	default :
		break;
	}
}


int main(int argc, char* argv[])
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(800,800);
	glutInitWindowPosition(20,20);
	glutCreateWindow("??????");
	init();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMouseFunc(mouse);
	glutMainLoop();
	return 0;
}
